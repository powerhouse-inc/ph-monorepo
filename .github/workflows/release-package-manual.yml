name: Release Package Manual

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Choose a package'
        required: true
        default: 'packages/*'
        type: choice
        options:
          - 'document-model'
          - '@powerhousedao/codegen'
          - '@powerhousedao/design-system'
          - 'document-drive'
          - 'document-model-libs'
          - 'packages/*'

env:
  NX_ISOLATE_PLUGINS: false

jobs:
  test:
    name: Build and Publish Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # needed for provenance data generation
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Build selected package
        run: |
          if [ "${{ github.event.inputs.package }}" == "packages/*" ]; then
            npx nx run-many -t build -p packages/*
          else
            npx nx build ${{ github.event.inputs.package }}
          fi
        shell: bash

      - name: Print Environment Info
        run: npx nx report
        shell: bash

      - name: git config
        shell: bash
        run: |
          git config user.name "Github Actions Bot"
          git config user.email "-"

      - name: Update pkg version
        run: npx nx release --projects=${{ github.event.inputs.package }} --skip-publish
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      # - name: Push changes to the branch
      #   run: git push origin
      #   shell: bash
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Push tags
      #   run: git push origin --tags
      #   shell: bash
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npx nx release publish --projects=${{ github.event.inputs.package }}
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
